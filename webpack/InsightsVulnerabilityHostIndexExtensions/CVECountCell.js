import React from 'react';
import PropTypes from 'prop-types';
import { UnknownIcon } from '@patternfly/react-icons';
import { Link } from 'react-router-dom';
import { useAPI } from 'foremanReact/common/hooks/API/APIHooks';

import { insightsCloudUrl } from '../InsightsCloudSync/InsightsCloudSyncHelpers';

const vulnerabilityApiPath = path =>
  insightsCloudUrl(`api/vulnerability/v1/${path}`);

export const CVECountCell = ({ hostDetails }) => {
  // eslint-disable-next-line camelcase
  const uuid = hostDetails?.subscription_facet_attributes?.uuid;

  const key = `HOST_CVE_COUNT_${uuid}`;
  const response = useAPI(
    uuid ? 'get' : null,
    vulnerabilityApiPath(`systems?uuid=${uuid}`),
    {
      key,
    }
  );

  if (uuid === undefined) {
    return <UnknownIcon />;
  }

  // eslint-disable-next-line camelcase
  const { cve_count } = (response.response?.data || [])[0]?.attributes || {};

  const cveLink = (
    // eslint-disable-next-line camelcase
    <Link to={`hosts/${hostDetails.name}#/Vulnerabilities`}>{cve_count}</Link>
  );

  // eslint-disable-next-line camelcase
  return cve_count === undefined ? <UnknownIcon /> : cveLink;
};

CVECountCell.propTypes = {
  hostDetails: PropTypes.object.isRequired,
};

export default CVECountCell;
